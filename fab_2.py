
'''
我们都知道兔子繁殖能力是惊人的，如下图：


我们可以用数学函数来定义：
                  1，当n=1 F(n) = 1，
当n=2  ,F(n) = 1
                  F(n-1)+F(n-2)，当n>2

课间练习：假设我们需要求出经历了20个月后，总共有多少对小兔崽子？（迭代 vs 递归）
改成35 会卡 效率低
用迭代代码来实现基本是毫秒级的，而用递归来实现就考验你的CPU能力啦（N秒~N分钟不等）。
这就是小甲鱼不支持大家所有东西都用递归求解的原因，本来好好的一个代码，
给你用了递归，效率反而拉下了一大截
'''




def fab(n):
    if n < 1:
        print('输入有误！')
        return -1

    if n == 1 or n == 2:
        return 1
    else:
        return fab(n-1) + fab(n-2)

result = fab(35)
if result != -1:
    print('总共有%d对小兔崽子诞生！' % result)
